jobs:
  include:
    - stage: test_and_lint
      services:
        - docker
      language: node_js
      cache:
        directories:
          - "$HOME/.npm"
      before_install:
        # Install a newer version of docker-compose than the one provided by Travis
        - sudo rm /usr/local/bin/docker-compose
        - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
        - sudo apt-get install libgconf-2-4 # cypress needs this
        - git clone https://github.com/egendata/e2e.git ../e2e
      install:
        - npm ci
        - cd ../e2e && npm ci
      script:
        - npm run lint
        - npm run test
        - cd ../e2e && HOST_IP=$(ip -4 addr show docker0 | grep -Po 'inet \K[\d.]+') npm run test:local:app

    - stage: fastlane_android
      language: android
      jdk: oraclejdk8
      android:
        components:
          - tools
          - platform-tools
          - android-28.0.3
      before_install:
        - nvm install
        - openssl aes-256-cbc -K $encrypted_f54afed1def3_key -iv $encrypted_f54afed1def3_iv -in ./android/google_play_store.json.enc -out ./android/google_play_store.json -d
        - openssl aes-256-cbc -K $encrypted_2dc3e24d74d0_key -iv $encrypted_2dc3e24d74d0_iv -in ./android/secrets.tar.enc -out ./android/secrets.tar -d
        - tar xvf ./android/secrets.tar -C ./android
        - mv ./android/release.keystore ./android/app
        - yes | sdkmanager "platforms;android-28"
        - npm ci
        - npm run preandroid
        - cd android && gem install bundler
        - bundle install && cd ..
      script:
        - |
          echo "OPERATOR_URL=${OPERATOR_URL} DROPBOX_KEY=${PDS_KEY}" > .env
          cd android && fastlane android_alpha

    - stage: fastlane_ios
      os: osx
      language: objective-c
      osx_image: xcode10.3
      before_install:
        - nvm install
        - npm ci
        - cd ios
        - gem install bundler
        - gem install cocoapods
        - gem update --system
      install:
        - bundle install
        - pod install
      script:
        - fastlane ios_testflight

    - stage: deliver
      name: "Build Docker image"
      services:
        - docker
      script:
        # Authenticate towards Docker Hub
        - docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
        - docker build -t jobtechswe/mydata-app .
        - docker push jobtechswe/mydata-app
      after_script:
        - docker logout

stages:
  - name: deliver
    if: branch = master AND type = pull_request
  - name: fastlane_ios
    if: branch = master AND type != pull_request
  - name: fastlane_android
    if: branch = master AND type != pull_request
  - name: test_and_lint
    if: branch = master AND type = pull_request