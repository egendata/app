# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

  platform :android do
    desc "Runs all the tests"
    lane :alpha do
      gradle(
        task: "clean bundleRelease"
      )
      upload_to_play_store(
        track: 'internal'
      )
    end



  lane :android_alpha do
    tag_prefix = 'android/alpha*'
    title = 'Android Alpha'
    scheme = 'Egendata'
    groups = 'Alpha Team'
    flavor = 'alpha'

    # Check if there is any change since last version
    is_releaseable = analyze_commits(match: tag_prefix)


    if is_releaseable then
      next_version = lane_context[SharedValues::RELEASE_NEXT_VERSION]

      android_set_version_code
      android_set_version_name(version_name: next_version)

      build_number=android_get_version_code
      git_add(path: 'app/build.gradle')
      git_commit(path: 'app/build.gradle', message: 'chore: version bump android', skip_git_hooks: true)
      sh("echo", "$GITHUB_TOKEN")
      sh("git", "push", "origin", "master")

      # gradle(
      #   task: "clean bundleRelease"
      # )

      # upload_to_play_store(
      #   track: 'internal'
      # )

      tag_name = "android/#{flavor}/#{next_version}/#{build_number}"
      notes = conventional_changelog(title: title, format: 'markdown')

      # Create tag to recognize future "last version" (the current version)

      set_github_release(
        repository_name: "egendata/app",
        api_token: ENV["GITHUB_TOKEN"],
        name: tag_name,
        tag_name: tag_name,
        description: notes,
        commitish: "master",
      )
    else
      echo(message: "Skip deploying #{title}. No changes since last one!")
    end

  end
end

